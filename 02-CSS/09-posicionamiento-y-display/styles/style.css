.caja-bloque {
  background: tomato;
  /* block es el estado normal de cualquier caja de tipo bloque */
  display: block;
}


.caja-inline {
  background: lightgreen;
  /* inline es el estado normal de cualquier caja de tipo en linea */
  display: inline;
}

.parrafo {
  background: lightseagreen;
  /* inline-block hace que se comporte como un elemento inline, pero aceptando cambios de ancho y alto y de margenes */
  display: inline-block;
  width: 400px;
  margin-top: 60px;  
}

/******* DISPLAY FLEX! */

.caja-padre {
  background: lightgoldenrodyellow;
  height: 300px;
  border: 2px solid black;
  display: flex;
  /*? flex-direction: row | column; */
  /*? justify-content: flex-start | flex-end | center | space-between | space-around | space-evenly  -> por defecto tiene flex-start*/
  /*? align-items: flex-start | flex-end | center | stretch | baseline; -> por defecto tiene stretch, que alarga las cajas hasta los bordes*/

  /** Para centrar completamente al centro */
  justify-content: center;
  align-items: center;

  /* space-between pone la primera y la última en los bordes y el resto se reparten el espacio que sobra */
  /* justify-content: space-between; */
  /* space around reparte las cajas poniendo espacio alrededor */
  /* justify-content: space-around; */

  /* space evenly reparte las cajas igual que space-around pero dejando exactamente el mismo espacio entre cajas */
  /* justify-content: space-evenly; */
 /**  Para hacer que las cajas cambien de fila si no caben  */
 flex-wrap: nowrap; /* comportamiento por defecto*/
 /* flex-wrap: wrap; comportamiento por defecto */

 /** Cuando tenemos contenido que se ha separado en varias filas, para decidir su alineación usamos align-content  */
 /*! solo funciona si tenemos wrap  */
/*? align-content: flex-start | flex-end | center | space-between | space-around | space-evenly; */
align-content: center;

/* Sirve para decidir el espacio entre filas o columnas */
/*! el row gap solo funciona si tenemos varias filas y las hemos alineado con align-content  */
row-gap: 20px;
column-gap: 10px;
}

.caja-hijo {
  background: salmon;
  border: 1px solid black;
  margin: 0;
  width: 90px;
  height: 90px;
  text-align: center;
  font-size: 30px;
}

/* Por defecto, flex-shrink siempre es 1, es decir siempre permite que las cajas se compriman */

/* Por defecto, flex-grow siempre es 0, es decir, no permite que se expandan a no ser que le digamos lo contrario */



.caja1 {
  /*! cuidado porque el order por defecto es 0  */
  order: 3;
  flex-grow: 1;
}
.caja2 {
  order: 5;
}
.caja3 {
  order: 1;
  flex-grow: 5;
}
.caja4 {
  order: 2;
  align-self: start;
}
.caja5 {
  order: 4;
  /* flex-shrink: 0; */
}

.caja7 {
  flex-shrink: 0;
}


/** !!!Truco con margin para empujar cajas hacia los lados */

.caja-margin {
  background: lightgreen;
  margin-right: auto;
  margin-bottom: auto;
}

/** display: none; */
/* Hace desaparecer algo del DOM (de los elementos de la web)  */
.desaparece {
  display: none;
}

/********************************************  */
/** POSICIONAMIENTO  */

/*? relative hace que la caja la podamos mover de posición arriba, abajo, izquiera y derecha  */

.relative {
  background: coral;
  height: 100px;
  position: relative;
  z-index: 2;

  /* top: 50px; */
}

.relative-2 {
  background: lightblue;
  height: 100px;
  top: -50px;
  position: relative;
  z-index: 5;
}
.relative-3 {
  background: lightgreen;
  height: 50px;
  position: relative;
  top: -125px;
  z-index: 8;
}

p {
  top: 400px;  /* esto no funciona porque no tiene un position puesto*/
}
p span {
  position: relative;
  top: -3px;
  left: -20px;
  right: 10px;
  bottom: 50px;
}

/*? position: absolute;  */
/* absolute siempre saca la caja del flujo de la página, es decir, todo lo otro se recoloca automáticamente */
/* La caja con absolute pasa a tener in width del contenido, no del 100% */
/* Las propiedades top, left, right, bottom las tomará como referencia del primer padre, o abuelo o bisabuelo, etc que tenga un position: relative.  Y si no hay ninguno entonces tomará como referencia el body */


.padre-relativo {
  background: lightgray;
  position: relative;
}

h2.hijo-absolute {
  background: lightsalmon;  
  position: absolute;
  bottom: -10px;
  right: 0px;
  margin: 0;
}
.producto {
  position: relative;
  background: lightgray;
  display: inline-block;  
}
.producto:not(:last-child) {
  margin-right: 15px;
}
.descuento {
  position: absolute;
  left: 0;
  top: 95px;

  background: crimson;
  color: white;
  padding: 2px 10px;
}

.precio {
  display: inline-block;
  background: yellow;
  width: 22px;
  height: 18px;
  padding: 9px;
  border-radius: 50px;


  position: absolute;
  top:-10px;
  right: -10px;
}

.articulos {
  display: flex;
  gap: 20px;
}

.articulo-tienda{
  background: lightgray;
  position: relative;
}

.foto-producto{
  display: block; /* para quitar el espacio absurdo que hay debajo de las imágenes*/
}

.titulo-producto {
  position: absolute;
  bottom: 15px;
  left: 10px;
  margin: 0;
  color: white;
  opacity: 0;
  padding: 2px 10px;
  transition: opacity 0.5s ease; 
  z-index: 3; 
}

.articulo-tienda:hover .titulo-producto {
  opacity: 1;
}

/** Opción overlay con un div añadido a nuestro html */
/* .overlay {
  background: black;
  opacity: 0;
  height: 100%;
  width: 100%;
  position: absolute;
  top:0;
  left: 0;
  z-index: 2;
  transition: opacity 0.5s ease;
}
.articulo-tienda:hover .overlay {
  opacity: 0.4;
} */

/** Opción con un after*/

.articulo-tienda::after {
  content: '';
  background: black;
  opacity: 0;
  height: 100%;
  width: 100%;
  display: block;
  transition: opacity 0.5s ease;

  position: absolute;
  top: 0;
  left: 0;
}

.articulo-tienda:hover::after {
  opacity: 0.4;
}


/** Position: fixed  */

.cabecera {
  background: #f8f869;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 20px;
  box-sizing: border-box;
  width: 100%;
  
  position: fixed;
  top: 0;
  left: 0;
  z-index: 10;
}

h1 {
  margin-top: 80px;
}

/** Position sticky */


.banner {
  background:crimson;
  padding: 10px;

  position: sticky;
  top: 67px;
  z-index: 15;
}